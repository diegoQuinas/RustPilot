name: CI/CD Pipeline for RustPilot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Create Android Virtual Device
        run: |
          echo "y" | sdkmanager "system-images;android-30;google_apis;x86"
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" -d "pixel_xl"

      - name: Start Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86
          profile: pixel_xl
          disable-animations: true
          script: |
            adb devices
            adb logcat -c

      - name: Install Appium
        run: |
          npm install -g appium
          appium

      - name: Run RustPilot tests on Android
        run: |
          cargo run --bin rust_pilot ./showcase-wikipedia-android/wikipedia.android.caps.yaml ./showcase-wikipedia-android/run-test.yml

#   test-ios:
#     runs-on: macos-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Xcode
#         run: |
#           sudo xcode-select -s /Applications/Xcode_12.4.app/Contents/Developer

#       - name: Install Appium
#         run: |
#           npm install -g appium

#       - name: Run RustPilot tests on iOS
#         run: |
#           # Aqu√≠ colocas los comandos para ejecutar tus pruebas con RustPilot en iOS
#           # Por ejemplo:
#           cargo test --target x86_64-apple-darwin
